match(a, b)只能从头开始匹配，a是正则表达式，b是字符串，返回匹配对象
match(a, b).group()返回匹配到的内容，如果没匹配到，返回None
match(a, b).span()返回匹配结果的位置，左开右闭区间
.匹配任意字符，除了换行符
[]匹配里面的字符
\d匹配数字
\D匹配非数字
\s匹配空白，即空格键，tab键
\S匹配非空白
\w匹配字母数字下划线
\W匹配非字母数字下划线
*匹配前面的字符0次或多次
+匹配前面的字符1次或多次
?匹配前面的字符0次或1次
{m}匹配前面的字符m次
{m,n}匹配前面的字符m到n次
^匹配字符串开头
$匹配字符串结尾
re.findall(a, b)返回所有匹配结果，a是正则表达式，b是字符串，返回列表
re.search(a, b)返回第一个匹配结果，a是正则表达式，b是字符串，返回匹配对象


.点号，可以代替除了换行符外的所有字符
*星号， 表示前一个子表达式0次到无数次
?问号， 表示前面子表达式0次或1次
\转义符，将特殊字符变成正常字符， \会和它后面的字符构成一个整体，看成1个字符
\d数字（digital），
()小括号，把括号里面的内容提取出来

.* 贪婪模式，匹配最长的满足要求的字符串
.*? 非贪婪模式，匹配一个能满足要求的最短的字符串

re
re.findall(pattern, string, flags=0)
正则表达式，字符串，特殊功能标志
返回一个列表，包含所有匹配到的结果，无结果则返回空列表
若正则表达式中含有多个小括号，将各个括号的内容放到1个元组中，该元组作为返回的列表的1个元素
特殊功能：

re.search(pattern, string, flags=0)
只返回第一个满足条件的字符串
匹配成功，返回一个正则表达式对象，否则就是None
通过.group()方法获取里面的值
.group()的参数，数字代表需要读取的第几个内容

re.S忽略换行符，会将识别到的换行符当作\n直接放入匹配内容中

先抓大，再抓小