变量命名可以使用$符号
变量需要声明，一律用var声明
同时声明多个、或为多个赋值，用逗号隔开
用大写变量表示常量

数据类型：基本数据类型（只有一个值），引用数据类型（可以含有多个值）
基本：数字、字符串、布尔值、未定义值、空值
引用：数组、对象

数字：不区分整型和浮点型
字符串：单双引号均可
布尔值：true、false
未定义值：已声明但未赋值，用undefined表示
空值：用null表示，表明系统没有分配空间

数字+数字=数字
字符串+字符串=字符串
字符串+数字=字符串

自增、自减同C语言

条件运算符（三目运算符）条件?表达式1：表达式2

语句包含操作数和操作符
语句用;隔开

类型转换：隐式、显式

隐式：自动进行的，如字符串加数字
显式： 字符串转数字：
                Number()将“数字型字符串”转换为数字
                parseInt()提取首字为数字的数字，遇到小数点停止，可以识别正负号
                parseFloat()同上，识别小数点
                NaN：Not a Number
      数字转字符串：
                toString()
                加上空字符串

转义字符：大差不差
注释：同C语言

流程控制方式（所有语言都只有这三种）：顺序、选择、循环

选择结构：
if、switch同C语言

循环结构：
while、do...while、for同C语言

函数：有返回值、无返回值，形参不用声明
同意用function定义
有返回值最后return返回值

函数的调用方式：
            直接调用        常用于无返回值的函数
            表达式中调用     有返回值的函数
            超链接中调用     a标签的href属性的值
            事件中调用
函数可以嵌套
常见内置函数

全局变量、局部变量

对象：内置对象、自定义对象

常用内置对象：字符串String、数组Array、日期Date、数学Math

对象包含：属性、方法，用.获取属性，.。。。()使用方法

字符串：
    length字符串长度

    toLowerCase()   小写字符
    toUpperCase()   大写字符
    charAt(n)       获取第n个字符,n从0开始
    substring(a,b)  左闭右开区间，截取范围内字符，省略b从a到结尾
    replace(原字符串/正则表达式，替换字符串)   字符串仅替换一次，正则表达式替换所有
    split("分隔符")          通过分隔符将字符串分成若干部分的数组
    indexOf(指定字符串)      返回首次出现的地方 若不包含，返回-1
    lastIndexOf(指定字符串)  返回最后出现的位置 若不包含，返回-1

数组：
    新建数组：
    1   var 数组名 = new Array(元素1, 元素2, 元素3)
    2   var 数组名 = [元素1, 元素2, 元素3] 语法糖

    数组长度：length

    slice(a,b)          数组切片
    unshift()           在数组开头插入元素
    push()              末尾插入元素
    shift()             删除开头元素
    pop()               删除末尾元素
    reverse()           数组逆序
    join("连接符")       将数组元素连接成字符串，默认用英文逗号

时间对象：
    日期对象：var 日期对象名 = new Date()
        getXxx()获取时间
            getFullYear()   年份，4位数字
            getMonth()      月份，0-11
            getDate()       日数，1-31
            getHours()      小时，0-23
            getMinutes()    分钟，0-59
            getSeconds()    秒数，0-59
            getDay()        星期，0-6，0代表星期日
        setXxx()设置时间
            setFullYear(y, m, d)   设置年月日，年是必选参数，其他可选
            setMonth(m, d)         设置月日，月是必选参数
            setDate(d)             设置日
            setHours(h, m, s, ms)      小时，第一个必选
            setMinutes(m, s, ms)    分钟，第一个必选
            setSeconds(s, ms)    秒数，第一个必选

数学对象：   直接使用属性和方法
    属性：
        PI      圆周率
        LN2     2的自然对数
        LN10    10的自然对数
        LOG2E   以2为底的e的对数
        LOG10E  以10为底的e的对数
        SORT2   2的平方根
        SORT1_2 2的平方根的倒数

    方法：
        max()
        min()
        sin()
        cos()
        tan()
        asin()
        acos()
        atan()
        atan2()
        floor()     向下取整
        ceil()      向上取整
        random()    返回[0,1)间的一个数
        注：三角函数计算有一定精度
        abs()   返回x的绝对值
        sqrt()  返回x的平方根
        log()   返回x的自然对数
        pow()   返回x的y次幂
        exp()   返回e的指数

DOM( Document Object Model)
DOM结构采用树形结构     节点
    元素节点    nodeType属性值：1
    属性节点    nodeType属性值：2
    文本节点    nodeType属性值：3

    获取元素的方式：                window.onload
        1   getElementById()        通过id获取元素    oxx = document.getElementById
        2   getElementsByTagName()   通过标签获取，可以获取某标签下的
        3   getElementsByClassName() 通过类名获取
        4   querySelector()          使用css格式获取符合条件的第一个元素
        5   QuerySelectorAll()       使用css格式获取所有符合条件的元素
        6   getElementsByName()      利用表单元素的name属性，获取符合条件的表单元素
        7   document.title
        8   document.body

        返回一个包含符合条件元素的伪数组
        伪数组有length属性，但不能使用push()等方法
        只有2可以操作动态创建的DOM
        利用js创建的节点，动态DOM
    创建元素：
        createElement()     用于创建元素节点
        createTextNode()    用于创建文本节点

            var oxx = document.createElement()
            oxx.id = "oxx"      为节点设置属性
            oxx.appendChild()   把oxx节点插入括号节点中
        每一个节点都被看作一个对象

    插入元素：
        A表示父元素，B表示动态创建的子元素
        ref表示父元素的指定子元素
        appendChild()   A.appendChild(B)
        插入到父元素的末尾
        inserBefore()   A.inserBefore(B, ref)
        插入到父元素的指定子元素之前
        firstElementChild   属性 第一个子元素
        lastElementChild    属性 最后一个子元素
    删除元素：
        A.removeChild(B)

    复制元素：
        obj.cloneNode(bool)     bool为布尔值
            1/true时复制该元素及其子元素
            0/false时仅复制该元素本身

    替换元素：
        A.replaceChild(new, old)    A:父元素, new:新子元素, old:旧子元素

HTML属性操作（对象属性）：对象属性、对象方法
    通过属性名获得属性值：obj.attr
        获得类属性需要使用className,因为class已经被用作js关键字
    设置属性值：obj.attr = "值"

        上述方法无法获取/设置自定义属性的值

    对象方法：
        getAttribute()          获取元素的某个属性值，可以获取自定义属性
        setAttribute(a, b)      设置元素某个属性的值，可以设定自定义属性的值  a:属性, b:值
        removeAttribute()       删除元素的某个属性
        hasAttribute()          判断元素是否含有某一属性，返回布尔值

CSS属性操作
    获取css属性的取值：
        getComputedStyle(obj).attr  obj:对象, attr:CSS属性名，改为用驼峰命名，从除第一个外，首字母大写
        等价于.attr => [attr]
            obj.style.attr只能获得元素style属性中的css属性，对于内部或外部样式无法获取
            getComputedStyle()  获取计算后的样式

    设置css属性值：
        单个：
            obj.style.attr = "值"    attr同样采用驼峰命名
        多个：
            obj.style.cssText = "正常css属性..."
                不常用，通常预设好css属性，为对象设置class属性


DOM遍历   查找元素    以当前所选元素为基点，查找父、子、兄弟元素
    obj.parentNode  获得父元素
    childNodes      所有子节点(元素、文本（伪数组
    firstChild      第一个子节点
    lastChild       最后一个子节点
    children        获取所有子元素（伪数组
    firstElementChild   第一个子元素
    lastElementChild    最后一个子元素

        换行被视作一个空白文本节点
    previousSibling     查找前一个兄弟节点
    nextSibling         查找后一个兄弟节点
    previousElementSibling  前一个兄弟元素节点
    nextElementSibling      后一个兄弟元素节点

innerHTML   快速设置、获取元素
innerText   快速设置、获取文本

js是基于事件的编程语言
事件：     主角、类型、过程

常见事件：鼠标、键盘、表单、编辑、页面
事件操作是js的核心，不懂事件操作，js等于白学

事件调用方式：     <script>中调用
                    obj.事件名 = function()
                    {
                     ......
                    }
                    本质上是为对象的某一属性赋值为一个函数，事件属性

                元素中调用
                    元素中为某一属性赋值
    常见鼠标事件：
        onclick     鼠标单击事件  任何元素都可以添加
        onmouseover 鼠标移入事件
        onmouseout  鼠标移出事件
        onmousedown 鼠标按下事件
        onmouseup   鼠标松开事件
        onmousemove 鼠标移动事件

            通常不使用表单按钮，而是通过js和css模拟按钮（外观原因）

    键盘事件：
        onkeydown   键盘按下
        onkeyup     键盘松开

    表单事件：
        onfocus     获取焦点是触发，仅表单、超链接元素有
        onblur      失去焦点时触发，仅表单、超链接元素有
                focus() 让元素获得焦点
        onselect    选中单行/多行文本框时触发
                select()    用于全选文本
        onchange    常用于具有多个选项的表单元素
                        单选框、复选框、下拉列表选择某项时触发
        submit

                触发了哪个元素的事件，哪个元素就是this


                对于select元素，obj.options[n]获得其中一个选项对象
                obj.selectedIndex获取所选选项的下标
                window.open()打开一个新窗口

    编辑事件：
        oncopy              可用于防止页面内容被复制    return false
        onselectstart       用于防止页面内容被选取
        oncontextmenu       禁用鼠标右键

    页面事件：
        onload              表示文档加载完后再执行的事件
        onbeforeunload       离开页面之前触发的事件

添加事件的两种方式：  事件处理器、事件监听器
        事件处理器：通过操作html属性实现  无法对同一个元素添加多个相同事件
        事件监听器：
                    绑定事件：obj.addEventListener(type, fn, false)
                    type    字符串，事件类型，一般为不加on的事件名
                    fn      函数名，可以是匿名函数
                    false   表示事件冒泡阶段调用  属于进阶知识
                            function(){...}匿名函数

                    解绑事件：obj.removeEventListener(type, fn, false)
                        fn  必须是函数名，不能是匿名函数
event对象
    当一个事件发生时，有关事件的详细信息会临时保存在event对象中
    每一个事件都有对应的event对象
    js默认给每个事件函数添加一个隐秘参数：event对象（第一个参数）
    event属性：
        type        事件类型
        keyCode     键码值     各个键对应的数字
        shiftKey    是否按下shift键  返回布尔值
        ctrlKey     是否按下ctrl键   返回布尔值
        altKey      是否按下alt键    返回布尔值

this
    哪个 DOM对象调用了this所在函数，this指向哪个对象
    有时候再内部只能使用this代替对象

window对象：
    一个窗口就是一个window对象
    浏览器自动创建window对象
    子对象：    也可以看成window的属性
        document    文档对象，用于操作页面元素   窗口里的html文档就是一个document对象
        location    地址对象，用于操作url地址
        navigator   浏览器对象，用于获取浏览器版本信息
        history     历史对象，用于操作浏览历史
        screen      屏幕对象，用于操作屏幕宽度高度

    BOM：Browser Object Module（浏览器对象模型）
        location、navigator、history、screen、document
        DOM包含于BOM，但常看作独立的

    常用方法：
        alert()         提示对话框
            常用于提示文字
            用\n换行，而不是<br>

        confirm()       判断对话框
            除文字外，还提供确认和取消的按钮
            确认返回true，取消返回false

        prompt()        输入对话框
            除提供文字，还返回一个字符串
        open(url, target)          打开窗口（括号里的为常用参数）
            若url为空，则打开空白页
            target打开位置，默认为新页打开
            返回一个window对象

        close()         关闭窗口（无参数
            关闭当前窗口
            关闭指定窗口需指定window对象

        setTimeout(code, time)    开启一次性计时器
            code:代码、函数
            time：时间，单位ms
            只执行一次

        clearTimeout(timer)  关闭一次性计时器
            timer需要关闭的计时器
            在发生后关闭无作用

        seInterval(code, time)    开启重复性计时器
            重复无数次

        clearInterval(timer) 关闭重复性计时器
            同上

                注意多次开启同类计时器造成的影响

    location对象：
        常用属性：
            href    获取/设置当前页面的地址
            search  获取和设置当前页面地址"?"及以后的内容
                querystring查询字符串
                一般用于数据库查询   与后端技术结合

            hash    获取"#"及以后的内容
                #一般用于锚点链接

   navigator对象：
        获取浏览器版本信息

    对于window对象来说，无论是它的属性还是方法都可以省略window.

    生成window对象是自动生成一个document对象

    document对象：
        常用属性：
            title       获取文档的title
            body        获取文档的body
            forms       获取所有form元素
            images      获取所有img元素
            links       获取所有a元素
            cookie      文档的cookie   常用于后端
            URL         获取当前文档的URL  仅获取      location.href不仅可以获取，就还能设置
            referrer    返回浏览者到达当前文档的URL     获取跳转连接的地址

                forms、images、links等价于getElementsByTagName("...")

        常用方法：
                ...
                write()     输出内容/标签
                writeln()   输出内容并换行 会在输出内容的最后加一个\n

